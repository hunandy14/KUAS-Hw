/**********************************************************
Name : OpenRaw 2.21
Date : 2016/08/04
By   : CharlotteHonG
Final: 2016/08/25
**********************************************************/
#ifndef OPEN_RAW
#define OPEN_RAW


#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <iomanip>
#include <sstream>
using namespace std;
typedef unsigned char imch;
typedef size_t imint;

namespace imr{
    class ImrSize{
    public:
        ImrSize(imint y, imint x);
        imint width;
        imint high;
    };
    class ImrCoor{
    public:
        ImrCoor(int y, int x);
        ImrCoor operator+(const ImrCoor &p);
        ImrCoor operator-(const ImrCoor &p);
        ImrCoor operator*(const ImrCoor &p);
        ImrCoor operator/(const ImrCoor &p);
        int y;
        int x;
    };
    class ImrMask{
    public:
        ImrMask(ImrSize masksize);
        ~ImrMask();
        imch & operator[](const size_t __n);
        imch & at2d(size_t y, size_t x);
        void sort(size_t len, size_t start);
    private:
        imch* mask;
        ImrSize masksize;
    };

    class imgraw {
    public:
        imgraw(ImrSize size);
        void read(string filename);
        void write(string filename);
        imch point_read(imint y, imint x);
        void point_write(imint y, imint x, imch value);
        imch & at2d(size_t y, size_t x);
        void resize_canvas(ImrSize size);
        imint w();
        imint h();
        void pri_htg(string title);
        void setMaskSize(ImrSize masksize);
        imch maskVal(ImrCoor ori, ImrCoor mas, ImrCoor shi);
        ImrMask getMask(ImrCoor ori, ImrCoor shi);
        imch & operator[](const size_t __n);
    private:
        ifstream::pos_type filesize;
        string filename;
        vector<imch> img_data;
        imint width;
        imint high;
        imch max;
        imch min;
        int htg_data[255];
        void histogram();
        void extremum();
        ImrSize masksize;
    };

#include "OpenRAW.cpp"
};



#endif